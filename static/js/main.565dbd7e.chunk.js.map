{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/MainNavigation.jsx","components/layout/Layout.jsx","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.jsx","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","exact","Layout","children","main","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortInAscendingOrder","URLSearchParams","search","get","sorting","onClick","push","list","sort","quoteA","quoteB","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","workStarted","setWorkStarted","when","current","value","form","onSubmit","event","preventDefault","enteredAuthor","enteredText","onAddQuote","onChange","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","console","log","HighlightedQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","path","url","NotFound","App","ReactDOM","createRoot","document","getElementById","render","basename"],"mappings":"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","file":"static/js/main.565dbd7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","import { NavLink } from \"react-router-dom\";\nimport classes from \"./MainNavigation.module.css\";\n\nexport default function MainNavigation() {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active} exact>\n              All quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/quotes/new\" activeClassName={classes.active}>\n              Add a quoute\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import classes from \"./Layout.module.css\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nexport default function Layout({ children }) {\n  return (\n    <>\n      <MainNavigation />\n      <main className={classes.main}>{children}</main>\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const qparams = new URLSearchParams(location.search);\n\n  const isSortInAscendingOrder = qparams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = () => {\n    // just update the URL for now, don't sort\n    history.push(\"/quotes?sort=\" + (isSortInAscendingOrder ? \"desc\" : \"asc\"));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortInAscendingOrder ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortQuotes(props.quotes, isSortInAscendingOrder).map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-router-http-53ba1-default-rtdb.asia-southeast1.firebasedatabase.app';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/quotes/new\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nexport default function AllQuotes() {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\")\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0))\n    return <NoQuotesFound />;\n\n  return (\n    <>\n      <h1>All Quotes Page</h1>\n      <QuoteList quotes={loadedQuotes} />\n    </>\n  );\n}\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [workStarted, setWorkStarted] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    if (workStarted) {\n      if (enteredAuthor && enteredText)\n        props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n  }\n\n  return (\n    <>\n      <Prompt\n        when={\n          workStarted &&\n          (!authorInputRef.current.value || !textInputRef.current.value)\n        }\n        message={(location) => \"Leave page?\"}\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onChange={() => setWorkStarted(true)}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nexport default function NewQuote() {\n  const history = useHistory();\n\n  const { status, sendRequest } = useHttp(addQuote);\n\n  useEffect(() => {\n    if (status === \"completed\") history.push(\"/quotes\");\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    console.log(quoteData);\n\n    sendRequest(quoteData);\n  };\n\n  return (\n    <>\n      <h1>New Quote Page</h1>\n      <QuoteForm\n        onAddQuote={addQuoteHandler}\n        isLoading={status === \"pending\"}\n      />\n    </>\n  );\n}\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { status, sendRequest, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (!error && status === \"completed\") onAddedComment();\n  }, []);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n    commentTextRef.value = \"\";\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"../comments/CommentsList\";\n\nimport classes from \"./Comments.module.css\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const { quoteId } = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments); // ignoring error for simplicity\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  let comments;\n  if (status === \"pending\")\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n  if (status === \"completed\" && loadedComments && loadedComments.length) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (status === \"completed\" && (!loadedComments || !loadedComments.length))\n    comments = <p className=\"centered\">No comments yet</p>;\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nimport { getSingleQuote } from \"../lib/api\";\n\nexport default function QuoteDetail() {\n  const { quoteId } = useParams();\n  const match = useRouteMatch();\n\n  const {\n    status,\n    sendRequest,\n    data: quote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\")\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n  if (error) return <p className=\"centered\">{error}</p>;\n\n  if (status === \"completed\" && !quote.text) return <NoQuotesFound />;\n\n  return (\n    <>\n      <h1>Quote Detail Page</h1>\n      {quote ? <HighlightedQuote {...quote} /> : <p>No quote found</p>}\n      <Route path={match.path} exact>\n        {quote && (\n          <Link to={`${match.url}/comments`} className=\"btn--flat centered\">\n            Load comments\n          </Link>\n        )}\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n}\n","export default function NotFound() {\n  return (\n    <div className=\"centered\">\n      <p>Page not found</p>\n    </div>\n  );\n}\n","import { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/layout/Layout\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/new\">\n          <NewQuote />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\n// Pages\n// 1. All quotes, /quotes\n// 2. Quote detail page, /quotes/:id\n// 3. New quote form, /quotes/new\n\nexport default App;\n\nexport const DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun\" },\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great\" },\n];\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter basename=\"/react-router-practice/quotes\">\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}